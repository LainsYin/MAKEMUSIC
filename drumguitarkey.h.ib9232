#ifndef DRUMGUITARKEY_H
#define DRUMGUITARKEY_H

#include <QDialog>
#include <QMap>
#include <QWheelEvent>
#include <QJsonObject>
namespace Ui {
class DrumGuitarKey;
}

class QSettings;
class VlcInstance;
class VlcMedia;
class VlcMediaPlayer;

class DrumGuitarKey : public QDialog
{
    Q_OBJECT

public:
    explicit DrumGuitarKey(QWidget *parent = 0);
    DrumGuitarKey(QWidget *parent,
                  const QString &name,
                  const QString &singer,
                  const QString &serial_id,
                  const QString &notes,
                  const QString &vPath,
                  const int &offset,
                  const int &bpm,
                  const int &type);
    void paintEvent(QPaintEvent *);
    void closeEvent(QCloseEvent *);
    void keyPressEvent(QKeyEvent *key);
    void mousePressEvent(QMouseEvent *mouse);
    void mouseReleaseEvent(QMouseEvent *mouse);
    void mouseMoveEvent(QMouseEvent *mouse);
    void wheelEvent(QWheelEvent *wheel);
    bool eventFilter(QObject *dialog, QEvent *event);
    ~DrumGuitarKey();

private slots:
    void on_pushButton_pause_clicked(bool checked);

    void on_comboBox_currentIndexChanged(int);

    void on_pushButton_plus_clicked();

    void on_pushButton_min_clicked();

private:
    void initWidget();
    void readAndSetStyleSheet();

    void drawDivision(QPainter *painter);
    void drawInstrument(QPainter *painter);
    void drawText(QPainter *painter, const QPoint &sta, const QString &text);
    QPoint equDivide(QPainter *painter, const QPoint &staP, const QPoint &endP,
                     const QColor &color, const int  &height);

    QList<QPoint> equDivide1(QPainter *painter, const QPoint &staP, const QPoint &endP,
                             const QColor &color, const int  &height);
    int  getDivNum();
private:
    Ui::DrumGuitarKey *ui;

    QJsonObject  json;
    VlcInstance *_instance;
    VlcMedia *_media;
    VlcMediaPlayer *_player;
    QSettings *resUrl;
    QList<QPoint> points;
    QString _name, _singer, _serial_id, _notes, _vPath, _resUrl;
    int _offset;
    int _bpm;
    int _type;

    int _count; //
    int _curCount;
    int _maxCount;
    int _startCount;
    int _index;
    int _cirInd;

    int _timeUnit;
};

#endif // DRUMGUITARKEY_H
